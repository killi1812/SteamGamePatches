/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package hr.algebra.steamgamepatch.views;

import hr.algebra.dal.Repository;
import hr.algebra.dal.RepositoryFactory;
import hr.algebra.model.Game;
import hr.algebra.parser.GamePatchParser;
import hr.algebra.utilities.IconUtils;
import hr.algebra.utilities.MessageUtils;
import java.awt.Color;
import java.io.File;
import java.nio.file.Files;
import java.nio.file.Path;
import java.util.List;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.ToolTipManager;
import javax.swing.border.Border;
import javax.swing.border.EtchedBorder;

/**
 *
 * @author fran
 */
public class Games extends javax.swing.JPanel {

    /**
     * Creates new form Games
     */
    private final Repository repo;
    private List<Game> games;
    private Game selectedGame;
    private Border dobarBorder = new JTextField().getBorder();

    private void SetSelectedGame(Game game) {
        selectedGame = game;
        tfId.setText(String.valueOf(selectedGame.idSteamGame));
        tfName.setText(selectedGame.name);
        tfUrl.setText(selectedGame.steamURL);
        tfPicture.setText(selectedGame.pictureURL);
        try {
            lblPic.setIcon(IconUtils.createIcon(new File(selectedGame.pictureURL), lblPic.getWidth(), lblPic.getHeight()));

        } catch (Exception e) {
            System.out.println(e);
            MessageUtils.showErrorMessage("ERROR", String.format(
                    "Failed to read picture on location %s", selectedGame.pictureURL));

        }
    }

    public Games() {
        repo = RepositoryFactory.getInstance();
        initComponents();
        ToolTipManager.sharedInstance().setDismissDelay(60000);
        getGames();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //@SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnParse = new javax.swing.JButton();
        tfSteamGameId = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lsGames = new javax.swing.JList<>();
        tfName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        tfId = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        tfUrl = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        tfPicture = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        btnEdit = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        lblPic = new javax.swing.JLabel();
        btnClear = new javax.swing.JButton();

        btnParse.setText("Get Patches");
        btnParse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnParseActionPerformed(evt);
            }
        });

        tfSteamGameId.setToolTipText("");

        jLabel1.setText("GameSteamId:");
        jLabel1.setToolTipText("<html>\nInput steam game id.<br>\nIt can be found on steam store site of the game in the link<br>\nex: https://store.steampowered.com/app/<strong>914710</strong>/Cat_Quest_II/<br>\nid: 914710<br>\n<html/>");

        jLabel2.setText("Selected Game:");

        lsGames.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lsGames.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lsGamesValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lsGames);

        jLabel3.setText("Name:");

        tfId.setEnabled(false);

        jLabel4.setText("ID:");

        jLabel5.setText("Url:");

        jLabel6.setText("Picture:");

        btnEdit.setText("Edit");
        btnEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");
        btnClear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnClearActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(150, 150, 150)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(76, 76, 76)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel5)
                                        .addGap(74, 74, 74)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(tfUrl, javax.swing.GroupLayout.DEFAULT_SIZE, 214, Short.MAX_VALUE)
                                            .addComponent(tfName)
                                            .addComponent(tfId)
                                            .addComponent(tfPicture, javax.swing.GroupLayout.Alignment.TRAILING)))
                                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel6)
                                            .addComponent(jLabel2)
                                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGap(0, 0, Short.MAX_VALUE))))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnClear)
                                .addGap(18, 18, 18)
                                .addComponent(btnEdit)
                                .addGap(18, 18, 18)
                                .addComponent(btnDelete)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(tfSteamGameId, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnParse)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 358, Short.MAX_VALUE)))
                .addGap(163, 163, 163))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(lblPic, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblPic, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnParse)
                    .addComponent(tfSteamGameId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(56, 56, 56)
                        .addComponent(jLabel2)
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(tfName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(tfId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel5)
                            .addComponent(tfUrl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(tfPicture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnEdit)
                            .addComponent(btnDelete)
                            .addComponent(btnClear)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(64, 64, 64)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void btnParseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnParseActionPerformed
        // TODO add your handling code here:

        if (tfSteamGameId.getText().isBlank()) {
            tfSteamGameId.setBorder(new EtchedBorder(Color.RED, Color.RED));
            return;
        }
        btnParse.setText("Working ...");
        var gameId = tfSteamGameId.getText().trim();
        try {
            GamePatchParser.parse(Integer.valueOf(gameId));
            MessageUtils.showInformationMessage(
                    "Success",
                    String.format("Parrsed succesfuly game with id: %s", gameId));
        } catch (Exception e) {
            System.out.println(e);
            MessageUtils.showErrorMessage("ERROR", String.format(
                    "Failed to parse patches for game %s", gameId));
        } finally {
            btnParse.setText("Get Patches");
            getGames();
            tfSteamGameId.setText("");
            tfSteamGameId.setBorder(dobarBorder);

        }
    }//GEN-LAST:event_btnParseActionPerformed

    private void lsGamesValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lsGamesValueChanged
        if (!evt.getValueIsAdjusting()) {
            Game selectedItem = lsGames.getSelectedValue();
            if (selectedItem != null) {
                SetSelectedGame(selectedItem);
            }
        }
    }//GEN-LAST:event_lsGamesValueChanged

    private void btnEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditActionPerformed

        if (!ValidateForm()) {
            return;
        }

        var game = new Game(
                selectedGame.idSteamGame,
                tfName.getText(),
                tfUrl.getText(),
                tfPicture.getText());
        try {
            //TODO nesto s parametrima
            repo.updateGame(selectedGame.idSteamGame, game);
        } catch (Exception e) {
            System.out.println(e);
            MessageUtils.showErrorMessage("ERROR", String.format(
                    "Failed to update game %s", selectedGame.name));
        } finally {
            getGames();
            clearSelected();
        }
    }//GEN-LAST:event_btnEditActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed

        if (selectedGame == null) {
            MessageUtils.showErrorMessage("Select Game", "Fist select a game");
            return;
        }

        var o = JOptionPane.showConfirmDialog(this, "This will delete all the patches tied with the game\nAre you shure that you want to delete the game?", "Delete", JOptionPane.YES_NO_OPTION, JOptionPane.WARNING_MESSAGE);

        if (o == JOptionPane.YES_OPTION) {
            try {
                repo.deleteGame(selectedGame.idSteamGame);
                Files.delete(Path.of(selectedGame.pictureURL));
            } catch (Exception e) {
                System.out.println(e);
                MessageUtils.showErrorMessage("ERROR", String.format(
                        "Failed to delete game %s", selectedGame.name));

            } finally {
                getGames();
                clearSelected();
            }
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        clearSelected();
    }//GEN-LAST:event_btnClearActionPerformed

    private void getGames() {
        try {
            games = repo.getGames().stream()
                    .sorted((g1, g2) -> g1.name.compareToIgnoreCase(g2.name))
                    .toList();
            DefaultListModel m = new DefaultListModel();
            m.addAll(games);
            lsGames.setModel(m);
        } catch (Exception e) {
            System.out.println(e);
            MessageUtils.showErrorMessage("ERROR", "Faild to get Games");
        }
    }

    private void clearSelected() {

        tfId.setText("");
        tfName.setText("");
        tfName.setBorder(dobarBorder);
        tfPicture.setText("");
        tfPicture.setBorder(dobarBorder);
        tfUrl.setText("");
        tfUrl.setBorder(dobarBorder);
        lblPic.setIcon(null);
    }

    private boolean ValidateForm() {
        var ret = true;
        if (tfName.getText().isBlank()) {
            tfName.setBorder(new EtchedBorder(Color.RED, Color.RED));
            ret = false;
        }
        if (tfPicture.getText().isBlank()) {
            tfPicture.setBorder(new EtchedBorder(Color.RED, Color.RED));
            ret = false;
        }
        if (tfUrl.getText().isBlank()) {
            tfUrl.setBorder(new EtchedBorder(Color.RED, Color.RED));
            ret = false;
        }
        return ret;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnEdit;
    private javax.swing.JButton btnParse;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblPic;
    private javax.swing.JList<Game> lsGames;
    private javax.swing.JTextField tfId;
    private javax.swing.JTextField tfName;
    private javax.swing.JTextField tfPicture;
    private javax.swing.JTextField tfSteamGameId;
    private javax.swing.JTextField tfUrl;
    // End of variables declaration//GEN-END:variables
}
